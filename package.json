{
  "name": "ydb-embedded-ui",
  "version": "8.5.0",
  "files": [
    "dist"
  ],
  "main": "dist/lib.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:ydb-platform/ydb-embedded-ui.git"
  },
  "dependencies": {
    "@bem-react/classname": "^1.6.0",
    "@ebay/nice-modal-react": "^1.2.13",
    "@gravity-ui/axios-wrapper": "^1.5.1",
    "@gravity-ui/chartkit": "^5.19.2",
    "@gravity-ui/components": "^3.13.2",
    "@gravity-ui/date-components": "^2.11.0",
    "@gravity-ui/date-utils": "^2.5.6",
    "@gravity-ui/i18n": "^1.7.0",
    "@gravity-ui/icons": "^2.12.0",
    "@gravity-ui/navigation": "^2.30.0",
    "@gravity-ui/paranoid": "^2.0.1",
    "@gravity-ui/react-data-table": "^2.1.1",
    "@gravity-ui/table": "^1.7.0",
    "@gravity-ui/uikit": "^6.40.0",
    "@gravity-ui/websql-autocomplete": "^13.4.0",
    "@hookform/resolvers": "^3.10.0",
    "@reduxjs/toolkit": "^2.5.0",
    "@tanstack/react-table": "^8.20.6",
    "axios": "^1.7.9",
    "axios-retry": "^4.5.0",
    "colord": "^2.9.3",
    "copy-to-clipboard": "^3.3.3",
    "crc-32": "^1.2.2",
    "history": "^4.10.1",
    "lodash": "^4.17.21",
    "monaco-editor": "^0.52.2",
    "numeral": "^2.0.6",
    "path-to-regexp": "^3.3.0",
    "qs": "^6.13.1",
    "react-error-boundary": "^4.1.2",
    "react-helmet-async": "^2.0.5",
    "react-hook-form": "^7.54.2",
    "react-json-inspector": "^7.1.1",
    "react-monaco-editor": "^0.56.2",
    "react-redux": "^9.2.0",
    "react-router-dom": "^5.3.4",
    "react-split": "^2.0.14",
    "react-syntax-highlighter": "^15.6.1",
    "redux": "^5.0.1",
    "redux-location-state": "^2.8.2",
    "tslib": "^2.8.1",
    "use-query-params": "^2.2.1",
    "uuid": "^10.0.0",
    "web-vitals": "^1.1.2",
    "ydb-ui-components": "^4.4.0",
    "zod": "^3.24.1"
  },
  "scripts": {
    "analyze": "source-map-explorer 'build/static/js/*.js'",
    "start": "react-app-rewired start",
    "dev": "DISABLE_ESLINT_PLUGIN=true TSC_COMPILE_ON_ERROR=true REACT_APP_BACKEND=http://localhost:8765 REACT_APP_META_BACKEND=undefined npm start",
    "build": "rm -rf build && DISABLE_ESLINT_PLUGIN=true CI=true react-app-rewired build",
    "//build:embedded": "echo 'PUBLIC_URL is a setting for create-react-app. Embedded version is built and hosted as is on ydb servers, with no way of knowing the final URL pattern. PUBLIC_URL=. keeps paths to all static relative, allowing servers to handle them as needed'",
    "build:embedded": "GENERATE_SOURCEMAP=false PUBLIC_URL=. REACT_APP_BACKEND=http://localhost:8765 REACT_APP_META_BACKEND=undefined npm run build",
    "build:embedded:archive": "npm run build:embedded && mv build embedded-ui && zip -r embedded-ui.zip embedded-ui && rm -rf embedded-ui",
    "lint": "run-p lint:*",
    "lint:js": "eslint  --ext .js,.jsx,.ts,.tsx .",
    "lint:styles": "stylelint 'src/**/*.{css,scss}'",
    "lint:other": "npm run prettier -- --check",
    "prettier": "prettier '**/*.{json,yaml,yml,md}'",
    "unused": "npx knip --include dependencies,files,exports,types",
    "package": "rm -rf dist && tsc -p tsconfig.package.json && copyfiles -u 1 'src/**/*.{css,scss,svg}' dist",
    "test": "react-app-rewired test",
    "eject": "react-scripts eject",
    "prepublishOnly": "npm run package",
    "typecheck": "tsc --noEmit",
    "prepare": "husky",
    "test:e2e:install": "npx playwright install --with-deps",
    "test:e2e": "npx playwright test --config=playwright.config.ts",
    "test:e2e:local": "PLAYWRIGHT_BASE_URL=http://localhost:3000/ npm run test:e2e"
  },
  "lint-staged": {
    "*.{scss, css}": [
      "stylelint --fix --quiet"
    ],
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix --quiet"
    ],
    "*.{json,yaml,yml,md}": [
      "prettier --write"
    ]
  },
  "jest": {
    "verbose": true,
    "moduleFileExtensions": [
      "js",
      "json",
      "ts",
      "tsx"
    ],
    "rootDir": ".",
    "transform": {
      "^.+\\.[jt]sx?$": "ts-jest"
    },
    "coverageDirectory": "./coverage",
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx,js,jsx}"
    ],
    "testEnvironment": "jsdom",
    "moduleNameMapper": {
      "\\.(css|less|scss|sass)$": "jest-transform-css",
      "^axios$": "axios/dist/node/axios.cjs",
      "^@gravity-ui/uikit/toaster-singleton-react-18$": "@gravity-ui/uikit/build/cjs/toaster-singleton-react-18.js"
    }
  },
  "browserslist": [
    "extends @gravity-ui/browserslist-config"
  ],
  "devDependencies": {
    "@commitlint/cli": "^19.6.1",
    "@commitlint/config-conventional": "^19.6.0",
    "@gravity-ui/browserslist-config": "^4.3.0",
    "@gravity-ui/eslint-config": "^3.3.0",
    "@gravity-ui/prettier-config": "^1.1.0",
    "@gravity-ui/stylelint-config": "^4.0.1",
    "@gravity-ui/tsconfig": "^1.0.0",
    "@playwright/test": "^1.49.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.1.0",
    "@testing-library/user-event": "^14.5.2",
    "@types/jest": "^29.5.14",
    "@types/lodash": "^4.17.14",
    "@types/numeral": "^2.0.5",
    "@types/qs": "^6.9.18",
    "@types/react": "^18.3.18",
    "@types/react-dom": "^18.3.5",
    "@types/react-router-dom": "^5.3.3",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@types/uuid": "^10.0.0",
    "copyfiles": "^2.4.1",
    "http-proxy-middleware": "^2.0.7",
    "husky": "^9.1.7",
    "jest-transform-css": "^6.0.2",
    "lint-staged": "^15.3.0",
    "mini-css-extract-plugin": "^2.9.2",
    "monaco-editor-webpack-plugin": "^7.1.0",
    "monaco-yql-languages": "^1.2.1",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.5.1",
    "prettier": "^3.4.2",
    "prop-types": "^15.8.1",
    "react": "^18.3.1",
    "react-app-rewired": "^2.2.1",
    "react-dom": "^18.3.1",
    "react-scripts": "^5.0.1",
    "sass": "^1.83.4",
    "source-map-explorer": "^2.5.3",
    "stylelint": "^15.11.0",
    "ts-jest": "^29.2.5",
    "typescript": "^5.7.3"
  },
  "peerDependencies": {
    "prop-types": "^15.8.1",
    "react": "^18.3.1",
    "react-dom": "^18.3.1"
  },
  "overrides": {
    "fork-ts-checker-webpack-plugin": "^9.0.2",
    "react": "$react",
    "react-dom": "$react-dom",
    "redux": "$redux",
    "typescript": "$typescript",
    "monaco-editor": "$monaco-editor"
  }
}
