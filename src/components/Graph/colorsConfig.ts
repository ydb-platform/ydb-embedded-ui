export type AbstractGraphColorsConfig = Partial<Record<string, Partial<Record<string, string>>>>;

export const graphColorsConfig = {
    // Default @gravity-ui/graph colors

    canvas: {
        belowLayerBackground: '#0000',
        border: '#0000',
        dots: 'var(--g-color-line-generic)',
        layerBackground: 'var(--g-color-base-background)',
    },
    // block: {
    //     text: 'var(--g-color-text-primary)',
    //     background: 'var(--g-color-base-float)',
    //     border: '#dfdfdf',
    // },
    connection: {
        background: 'var(--g-color-line-generic-solid)',
        hoverBackground: 'var(--g-color-line-generic-solid)',
        selectedBackground: 'var(--g-color-line-generic-solid)',
        // selectedBackground: 'var(--g-color-line-positive)',
    },

    // Gravity-UI Colors

    // textsMain: {
    //     primary: 'var(--g-color-text-primary)',
    //     complementary: 'var(--g-color-text-complementary)',
    //     secondary: 'var(--g-color-text-secondary)',
    //     hint: 'var(--g-color-text-hint)',
    // },
    // textsSemantic: {
    //     info: 'var(--g-color-text-info)',
    //     infoHeavy: 'var(--g-color-text-info-heavy)',
    //     positive: 'var(--g-color-text-positive)',
    //     positiveHeavy: 'var(--g-color-text-positive-heavy)',
    //     warning: 'var(--g-color-text-warning)',
    //     warningHeavy: 'var(--g-color-text-warning-heavy)',
    //     danger: 'var(--g-color-text-danger)',
    //     dangerHeavy: 'var(--g-color-text-danger-heavy)',
    //     utility: 'var(--g-color-text-utility)',
    //     utilityHeavy: 'var(--g-color-text-utility-heavy)',
    //     misc: 'var(--g-color-text-misc)',
    //     miscHeavy: 'var(--g-color-text-misc-heavy)',
    // },
    // backgroundsBasic: {
    //     background: 'var(--g-color-base-background)',
    //     generic: 'var(--g-color-base-generic)',
    //     genericHover: 'var(--g-color-base-generic-hover)',
    //     medium: 'var(--g-color-base-medium)',
    //     mediumHover: 'var(--g-color-base-medium-hover)',
    //     simple: 'var(--g-color-base-simple)',
    //     simpleHover: 'var(--g-color-base-simple-hover)',
    // },
    // backgroundsFloats: {
    //     float: 'var(--g-color-base-float)',
    //     floatHover: 'var(--g-color-base-float-hover)',
    //     floatMedium: 'var(--g-color-base-float-medium)',
    //     floatHeavy: 'var(--g-color-base-float-heavy)',
    // },
    // backgroundsSemantic: {
    //     infoLight: 'var(--g-color-base-info-light)',
    //     infoLightHover: 'var(--g-color-base-info-light-hover)',
    //     positiveLight: 'var(--g-color-base-positive-light)',
    //     positiveLightHover: 'var(--g-color-base-positive-light-hover)',
    //     warningLight: 'var(--g-color-base-warning-light)',
    //     warningLightHover: 'var(--g-color-base-warning-light-hover)',
    //     dangerLight: 'var(--g-color-base-danger-light)',
    //     dangerLightHover: 'var(--g-color-base-danger-light-hover)',
    //     utilityLight: 'var(--g-color-base-utility-light)',
    //     utilityLightHover: 'var(--g-color-base-utility-light-hover)',
    //     miscLight: 'var(--g-color-base-misc-light)',
    //     miscLightHover: 'var(--g-color-base-misc-light-hover)',
    //     neutralLight: 'var(--g-color-base-neutral-light)',
    //     neutralLightHover: 'var(--g-color-base-neutral-light-hover)',

    //     infoMedium: 'var(--g-color-base-info-medium)',
    //     infoMediumHover: 'var(--g-color-base-info-medium-hover)',
    //     positiveMedium: 'var(--g-color-base-positive-medium)',
    //     positiveMediumHover: 'var(--g-color-base-positive-medium-hover)',
    //     warningMedium: 'var(--g-color-base-warning-medium)',
    //     warningMediumHover: 'var(--g-color-base-warning-medium-hover)',
    //     dangerMedium: 'var(--g-color-base-danger-medium)',
    //     dangerMediumHover: 'var(--g-color-base-danger-medium-hover)',
    //     utilityMedium: 'var(--g-color-base-utility-medium)',
    //     utilityMediumHover: 'var(--g-color-base-utility-medium-hover)',
    //     miscMedium: 'var(--g-color-base-misc-medium)',
    //     miscMediumHover: 'var(--g-color-base-misc-medium-hover)',
    //     neutralMedium: 'var(--g-color-base-neutral-medium)',
    //     neutralMediumHover: 'var(--g-color-base-neutral-medium-hover)',

    //     infoHeavy: 'var(--g-color-base-info-heavy)',
    //     infoHeavyHover: 'var(--g-color-base-info-heavy-hover)',
    //     positiveHeavy: 'var(--g-color-base-positive-heavy)',
    //     positiveHeavyHover: 'var(--g-color-base-positive-heavy-hover)',
    //     warningHeavy: 'var(--g-color-base-warning-heavy)',
    //     warningHeavyHover: 'var(--g-color-base-warning-heavy-hover)',
    //     dangerHeavy: 'var(--g-color-base-danger-heavy)',
    //     dangerHeavyHover: 'var(--g-color-base-danger-heavy-hover)',
    //     utilityHeavy: 'var(--g-color-base-utility-heavy)',
    //     utilityHeavyHover: 'var(--g-color-base-utility-heavy-hover)',
    //     miscHeavy: 'var(--g-color-base-misc-heavy)',
    //     miscHeavyHover: 'var(--g-color-base-misc-heavy-hover)',
    //     neutralHeavy: 'var(--g-color-base-neutral-heavy)',
    //     neutralHeavyHover: 'var(--g-color-base-neutral-heavy-hover)',
    // },
    // linesGeneral: {
    //     generic: 'var(--g-color-line-generic)',
    //     genericHover: 'var(--g-color-line-generic-hover)',
    //     genericActive: 'var(--g-color-line-generic-active)',
    //     genericAccent: 'var(--g-color-line-generic-accent)',
    //     genericAccentHover: 'var(--g-color-line-generic-accent-hover)',
    //     solid: 'var(--g-color-line-generic-solid)',
    // },
    // linesSemantic: {
    //     info: 'var(--g-color-line-info)',
    //     positive: 'var(--g-color-line-positive)',
    //     warning: 'var(--g-color-line-warning)',
    //     danger: 'var(--g-color-line-danger)',
    //     utility: 'var(--g-color-line-utility)',
    //     misc: 'var(--g-color-line-misc)',
    // },
} as const satisfies AbstractGraphColorsConfig;
